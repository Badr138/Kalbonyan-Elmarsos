1- How can you require a certain format for data entered into an input element?

- Answer: by specifying the type attribute
There are many types, including telephone numbers, dates, names, and others.

2- How can you most easily change the appearance of the top input form to look like the bottom input form? 

- Answer: by adding CSS
You can extensively tailor appearance in CSS.

3- How does a <label> element affect the type of the <input> element it contains?

- Answer: It doesn't.
The label element provides easier access to the form field, but has nothing to do with types.


4- Why should you use form elements instead of custom coding data inputs in JavaScript?

- Answer: You can have maximum versatility and robustness with minimum effort.
Substantial effort has already been spent on form elements and their use with different display types.

5- What happens when you put a <label> element around an <input> element?

- Answer: Clicking on the label activates that form field, and screen readers know that the label goes with the field.
Labels make it much easier for users of many kinds to access your form fields.

6- When used with the <input> tag , how is a placeholder attribute different from a value attribute?

- Answer: A placeholder is a temporary suggestion of form, while a value is an estimate of the correct response.
The user needs to enter a replacement for the placeholder.

7- What's the difference between the value attribute and the placeholder attribute?

- Answer: The value attribute fills the field with a value that will be submitted with the form. The placeholder shows a suggestion, but doesn't really enter it.
Yes - only use value if you want that value to go to the server unless the user changes it explicitly.