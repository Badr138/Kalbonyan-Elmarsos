1- Which best describes the typical basic Git workflow?

- Answer: create new or edit existing files, stage the files, commit the files
Though the workflow might differ according to the needs of the project, the essence of the workflow is change files, stage, and commit.

2- If project files undergo changes a, b, and c, which changes will be added to the following commit: [change a is made] git add . [change c is made] [change b is made] git add . git commit -m "Commit Message"

- Answer: a, b, and c
Change a is staged before changes b and c are staged together, so all three changes will be committed.

3- Which tree in the Git architecture does NOT require a Git command to move file changes to that tree?

- Answer: the working directory
In the working directory, the user can create new files or change existing files that do not yet exist in either the staging index or the repository, and no Git command is required to do so.

4- If the HEAD is pointed to commit 1b34c8 on the master branch when commit 43c562 occurs, where will HEAD point if the branch changes from master to test, and then back to master?

- Answer: 43c562
When changing branches, Git remembers the HEAD of the previous branch and will resume at that commit when the user returns to that branch.

5- If a bad actor tampers with a file in an old version of a repository, which is true?

- Answer: The changed checksum would generate an error on access of that version or a descendant.
The hashing algorithm uses the commit ancestry to compute a SHA-1, so all descendents of the altered commit would have invalid SHA-1 checksums.

6- If you view the contents of .git/HEAD and find the contents below, what do you know about the HEAD pointer?
ref: refs/heads/new

- Answer: HEAD currently points to a commit in branch new.
The .git/HEAD file indicates the branch HEAD currently points to, and the contents of the file will contain the SHA of that branch's HEAD. If you checkout another branch, the contents of .git/refs/heads/new will not change, but the .git/HEAD contents will.

7- You have made edits to file1.txt and then execute git add file1.txt and git commit -m "commit message". You edit the file again. What steps are required to move the file to the working directory?

- Answer: The file is already in the working directory.
The file is always in the working directory. Its content will not agree with the staging directory until contents have been staged, and its contents will not agree with the repository until contents have been committed.