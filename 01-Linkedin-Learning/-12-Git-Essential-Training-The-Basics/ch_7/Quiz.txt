1- In what way does the commit history change when git revert is executed?

- Answer: HEAD points to a new revert commit that is a descendent of the previous HEAD.
Because Git prioritizes integrity of data, the ancestry of HEAD will not change -- a new commit that reverts the prior commit's changes is added.

2- What is the difference between git reset HEAD header.c and git checkout -- header.c?

- Answer: git reset changes the staging index and git checkout changes the working directory.
git reset HEAD unstages files, or removes the changes from the staging index, while git checkout pulls the last commit's version of a file from the repository and replaces the working directory version with it.

3- Which command will replace the staging directory version "footer.css" with the repository version?

- Answer: git reset HEAD footer.css
Since the HEAD points to the repository's current version of files, Git will reset the footer.css in the staging index with the repository version of footer.css.

4- What is the output for the final command if file1.c is staged and file2.c is untracked? git clean -f git reset HEAD -- file1.c git clean -n

- Answer: Output would be: Would remove file1.c
file2.c has already been removed, and unstaging file1.c would make it eligible for removal at the next git clean.

5- What is the result of the following commands if file1.c, file2.c, and file3.c are untracked? git add file2.c git clean -f

- Answer: file2.c will be staged for commit and the other two files will be removed.
git clean -f will force clean file1.c and file3.c. The staged file2.c will remain in the working directory.

6- You have found a commit message three generations back, with SHA fdda5e3d8, is poorly written. Which use of git commit --amend will allow you to edit the commit message for that commit?

- Answer: git commit --amend cannot be used in this situation
git commit --amend can only be used to edit the current HEAD. In this case, you would need to use git rebase -i HEAD~n to access all commits between HEAD and the nth commit prior to HEAD.

7- You have made significant changes to your working directory, editing file1.c, file2.c, and file3.c. You also made changes to the inc/ directory and staged those changes for commit. Now you want to roll everything back and undo all changes. Which should you use?

- Answer: git reset HEAD inc/ followed by git checkout -- file1.c file2.c file3.c inc/
The git reset command will unstage the inc/ directory, and the git checkout command will return all unstaged files to the repository version.

8- Assuming the SHA of HEAD's parent commit is 9812aa1b, what is the result of git revert 9812aa1b?

- Answer: The repository will lose the changes from commit 9812aa1b.
The changes made in HEAD's parent commit will be removed, and the changes made in the HEAD commit will be played over the new version to create a new commit.

9- Which command will allow a user to preview a list of only untracked files to be deleted?

- Answer: git clean -n
git clean specifically removes untracked files, and using the "-n" option allows the user to preview which files would be affected.

10- Which use of git commit --amend is NOT allowed?

- Answer: changing the contents of HEAD's parent commit
The --amend option isn't allowed for older commits because the entire commit will change, which threatens the integrity of the data and ancestry.

11- Why will Git fail to undo the latest changes to footer.css in the following series of commands: git commit -am "Bug ticket 55: changes to new style git checkout -- footer.css"

- Answer: Git cannot undo changes after a commit.
git checkout replaces the working directory version of a file with the repository version of the file, so the committed file is the version that will be checked out.

12- A client has decided they want to revert one page of their website generated by about.php to a version they had in the commit with SHA 53daff9b. Which process should you use?

- Answer: git checkout 53daff9b -- about.php and then git commit -am "Reverts about.php to version live in January 2019"
git checkout will pull the version of about.php from the needed commit, and that version will be included in the new commit.