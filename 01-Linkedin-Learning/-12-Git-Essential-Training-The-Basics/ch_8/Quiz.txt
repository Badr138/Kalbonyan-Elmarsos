1- What steps can a user take to remove a personal file from the repository while keeping a local copy that won't be tracked by Git?

- Answer: git rm --cached personal.txt add personal.txt to .gitignore git commit -a
Using the "--cached" option with git rm will remove the file from the index without affecting the local copy. When the file name is then added to .gitignore and all changes committed to the repository, the local copy will remain but will no longer be seen by Git.

2- Which .gitignore contents would successfully ignore all files in the var/ directory, as well as the BUILDINST.md file?

- Answer: var/
	BUILDINST.md
The .gitignore file should only contain a newline-delineated list of files and directories Git should ignore in the repository.

3- Why might packaging and distribution files and directories be included in a .gitignore template?

- Answer: The files are not edited as source code is.
.gitignore should include any files that do not need to be tracked by Git, including those that will not be edited by developers but that might change.

4- Using git status reveals Git does NOT see the directory "css". What steps can you take to troubleshoot?

- Answer: Ensure css/ does not appear in the .gitignore file, and ensure there is a file of any type in the directory.
There is a third location to check, as well -- the file at .git/info/exclude in the repository.

5- Which of these should NOT generally be included in the .gitignore file?

- Answer: directories containing project code
Because these are text files in development, with changes that might require reversion, codebase directories should as a general rule not be included in the .gitignore file.

6- What is the conventional file name to ensure an otherwise empty directory is included in the repository?

- Answer: .gitkeep
Using .gitkeep for the filename is the convention, though any file name is acceptable.

7- Why might a user choose NOT to include a .gitignore file in the repository?

- Answer: The files to be ignored are user- or system-specific.
Files specific to a user's development environment, account, or computer system are neither needed in a repository nor are they advisable additions to a repository for the sake of security, particularly if the repository is shared and not used only locally.

8- After adding a file to your .gitignore, you type git status and see the file listed as untracked. Why is the .gitignore inclusion NOT successful?

- Answer: The file was tracked before inclusion in .gitignore.
Running git rm --cached <filename> will remove the file from tracking, and Git will begin to ignore it.

9- Which types of files should always be globally ignored?

- Answer: no file types should always be ignored
Whether a file should be ignored on a user or global level is entirely personal/team preference.

10- Which kind of file might be included in the file generated by this command: git config --global core.excludesfile ./.gitignore_user

- Answer: log files created by multiple projects in separate repositories
Log files are created during run-time, so they are not ideal files to track in version control.